# Vipps/MobilePay Payment Integration for Odoo 17 CE
# Requirements file for production deployment

# Core Dependencies
# =================

# HTTP requests and API communication
requests>=2.31.0,<3.0.0

# Cryptography for secure credential storage and webhook validation
cryptography>=41.0.0,<42.0.0

# QR code generation for POS payments
qrcode[pil]>=7.4.0,<8.0.0

# Image processing for QR codes and payment icons
Pillow>=10.0.0,<11.0.0

# JSON Web Token handling (if needed for advanced auth)
PyJWT>=2.8.0,<3.0.0

# Phone number validation and formatting
phonenumbers>=8.13.0,<9.0.0

# Date and time utilities
python-dateutil>=2.8.0,<3.0.0

# URL parsing and validation
urllib3>=2.0.0,<3.0.0

# Development Dependencies (Optional)
# ==================================
# Uncomment for development environment

# Testing framework
# pytest>=7.4.0,<8.0.0
# pytest-cov>=4.1.0,<5.0.0
# pytest-mock>=3.11.0,<4.0.0

# Code formatting and linting
# black>=23.7.0,<24.0.0
# flake8>=6.0.0,<7.0.0
# isort>=5.12.0,<6.0.0

# Type checking
# mypy>=1.5.0,<2.0.0

# Security scanning
# bandit>=1.7.0,<2.0.0
# safety>=2.3.0,<3.0.0

# Documentation generation
# sphinx>=7.1.0,<8.0.0
# sphinx-rtd-theme>=1.3.0,<2.0.0

# Performance monitoring
# psutil>=5.9.0,<6.0.0

# Odoo Dependencies
# =================
# These are automatically handled by Odoo, listed for reference:
# - odoo>=17.0,<18.0  # Odoo 17 CE
# - psycopg2>=2.9.0   # PostgreSQL adapter
# - lxml>=4.9.0       # XML processing
# - werkzeug>=2.3.0   # WSGI utilities
# - babel>=2.12.0     # Internationalization

# System Dependencies
# ===================
# These must be installed at the system level:
# - postgresql-client  # PostgreSQL client tools
# - wkhtmltopdf       # PDF generation (if using reports)
# - node.js           # JavaScript runtime (for asset compilation)
# - npm               # Node package manager

# Production Deployment Dependencies
# ==================================
# Additional packages for production environments

# Process management
# supervisor>=4.2.0,<5.0.0

# Reverse proxy and load balancing
# nginx>=1.20.0  # Install via system package manager

# SSL/TLS certificate management
# certbot>=2.6.0  # Install via system package manager

# Monitoring and logging
# prometheus-client>=0.17.0,<1.0.0
# structlog>=23.1.0,<24.0.0

# Caching (Redis)
# redis>=4.6.0,<5.0.0

# Message queuing (if using Celery for async tasks)
# celery>=5.3.0,<6.0.0

# Environment Configuration
# =========================
# For managing environment variables and configuration

# python-dotenv>=1.0.0,<2.0.0

# Backup and Recovery
# ===================
# Tools for database backup and disaster recovery

# pg_dump and pg_restore are included with PostgreSQL
# Additional backup tools can be added here

# Security and Compliance
# =======================
# Additional security packages for production

# Rate limiting
# flask-limiter>=3.4.0,<4.0.0  # If using Flask components

# IP address validation
# ipaddress  # Built into Python 3.3+

# Webhook signature validation (already covered by cryptography)
# hmac  # Built into Python standard library

# GDPR compliance tools
# Additional packages for data anonymization if needed

# Performance Optimization
# ========================
# Packages for performance monitoring and optimization

# Memory profiling
# memory-profiler>=0.61.0,<1.0.0

# CPU profiling  
# py-spy>=0.3.0,<1.0.0

# Database query optimization
# sqlparse>=0.4.0,<1.0.0

# Notes for Installation
# ======================
# 
# 1. Install system dependencies first:
#    sudo apt-get update
#    sudo apt-get install postgresql postgresql-contrib python3-dev libpq-dev
#    sudo apt-get install wkhtmltopdf nodejs npm
#
# 2. Create virtual environment:
#    python3 -m venv venv
#    source venv/bin/activate
#
# 3. Install Python dependencies:
#    pip install --upgrade pip
#    pip install -r requirements.txt
#
# 4. For development environment, also install:
#    pip install -r requirements-dev.txt
#
# 5. Verify installation:
#    python3 -c "import requests, cryptography, qrcode; print('All dependencies installed successfully')"
#
# 6. Run compatibility check:
#    python3 odoo17_compatibility_audit.py
#
# Version Compatibility Matrix
# ============================
# 
# | Odoo Version | Module Version | Python | PostgreSQL | Status |
# |--------------|----------------|--------|------------|--------|
# | 17.0 CE      | 1.0.0+        | 3.8+   | 12+        | ✅ Full |
# | 16.0 CE      | 0.9.x          | 3.8+   | 12+        | ⚠️ Legacy |
# | 15.0 CE      | Not supported  | -      | -          | ❌ No   |
#
# Security Notes
# ==============
#
# - All dependencies are pinned to specific version ranges for security
# - Regular security updates should be applied
# - Use `pip-audit` to check for known vulnerabilities
# - Monitor security advisories for all dependencies
#
# Performance Notes  
# =================
#
# - Use Redis for caching in production environments
# - Consider using Celery for async webhook processing
# - Monitor memory usage with large transaction volumes
# - Optimize PostgreSQL configuration for payment workloads
#
# Support and Updates
# ===================
#
# - Check for updates regularly: pip list --outdated
# - Subscribe to security advisories for critical dependencies
# - Test updates in staging environment before production deployment
# - Maintain compatibility with Odoo 17 CE release cycle